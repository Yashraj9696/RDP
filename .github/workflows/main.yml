name: Windows RDP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Setup Ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath "$env:USERPROFILE\ngrok"
          & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable RDP Access
        run: |
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          net user runneradmin YourPassword123!

      - name: Start Ngrok in Background
        run: |
          $ngrokPath = "$env:USERPROFILE\ngrok\ngrok.exe"
          Start-Job -ScriptBlock { param($path) & $path tcp 3389 } -ArgumentList $ngrokPath

      - name: Show Connection Info (with Retry)
        run: |
          $retries = 0
          $success = $false
          do {
            Start-Sleep -Seconds 5
            try {
              $tunnel = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
              $success = $true
            } catch {
              $retries++
            }
          } until ($success -or $retries -ge 10)

          if (-not $success) {
            Write-Host "Ngrok tunnel failed to start after 10 tries."
            exit 1
          }

          $url = $tunnel.tunnels[0].public_url -replace "tcp://", ""
          Write-Host "`n*** RDP Connection Info ***"
          Write-Host "IP:Port => $url"
          Write-Host "Username: runneradmin"
          Write-Host "Password: YourPassword123!"
